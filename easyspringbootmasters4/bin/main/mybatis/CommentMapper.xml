<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置命名空间 -->
<mapper namespace="com.ray.mapper.CommentMapper"> 
<!-- sql片段 -->
	<sql id="cmt">comment_id,
		content,
		create_time,
		course_no,
		user_no,
		type_id
	</sql>

	<resultMap type="com.ray.entity.User" id="userRM">
		<!-- 主键 -->
		<id property="userNo" column="user_no"/>
		<!-- 普通 -->
		<result property="userName" column="user_name"/>
		<result property="userPwd"  column="user_pwd"/>
		<result property="maxScore" column="max_score"/>
		<result property="userPic" column="user_pic"/>
		<!-- 对象映射 -->
		<association property="role" javaType="com.ray.entity.Role">
			<!-- 主键 -->
			<id property="roleId" column="role_id"/>
			<result property="roleName" column="role_name"/>
		</association>
	</resultMap>
	
    <resultMap type="com.ray.entity.Course" id="courseRM">
        <!-- 主键映射 -->
        <id property="courseNo" column="course_no"/>

        <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
        <result property="courseName" column="course_name"/>
        <result property="courseHours" column="course_hours"/>
        <result property="courseStatus" column="course_status"/>
        <result property="reqs" column="course_reqs"/>
        <result property="coursePoint" column="course_point"/>
        <result property="courseMemo" column="course_memo"/>
        <result property="courseTextbookPic" column="course_textbook_pic"/>


        <!-- 对象关联 -->
        <!-- 对一关系 -->
        <association property="courseType" javaType="com.ray.entity.CourseType">
            <!-- 主键映射 -->
            <id property="typeId" column="type_id"/>

            <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
            <result property="typeName" column="type_name"/>
        </association>

    </resultMap>
	
	<resultMap type="com.ray.entity.Comment" id="commentRM">
		<!-- 主键 -->
		<id property="commentId" column="comment_id"/>
		<!-- 普通 -->
		<result property="content" column="content"/>
		<result property="createTime" jdbcType="TIMESTAMP" column="create_time" javaType="java.sql.Timestamp" />
		<!-- 对象映射 -->
		<association property="course" javaType="com.ray.entity.Course" resultMap="courseRM"/>
		<association property="user" javaType="com.ray.entity.User" resultMap="userRM"/>
		<association property="commentType" javaType="com.ray.entity.CommentType">
            <!-- 主键映射 -->
            <id property="typeId" column="type_id"/>

            <!-- 普通字段 property指实体的属性；column结果集的字段名称 -->
            <result property="typeName" column="type_name"/>
        </association>
	</resultMap>
	
	<resultMap type="java.util.Map" id="type_cnt">
		<result column="course_no" property="courseNo"></result>
		<result column="count" property="count"></result>
	</resultMap>
	
	<resultMap type="java.util.Map" id="c">
		<result column="good" property="good"></result>
		<result column="bad" property="bad"></result>
	</resultMap>
	<resultMap type="java.util.Map" id="lc">
		<result column="course_no" property="courseNo"></result>
		<association property="c" javaType="java.util.Map" resultMap="c"/>
	</resultMap>
	
	<!-- 增 -->
	<insert id="addComment" parameterType="com.ray.entity.Comment">
        insert into tbl_comments
        (<include refid="cmt"/>)
        values
        (#{commentId},#{content},#{createTime,jdbcType=TIMESTAMP},#{course.courseNo},#{user.userNo},#{commentType.typeId})
    </insert>
    
    <!-- 删1 -->
    <delete id="removeCommentById" parameterType="int">
        delete from tbl_comments
        where comment_id = #{commentId}
    </delete>
    <!-- 删2 -->
    <delete id="removeCommentByCourseNo" parameterType="string">
        delete from tbl_comments
        where course_no = #{courseNo}
    </delete>
    <!-- 删3 -->
    <delete id="removeCommentByTypeId" parameterType="int">
    	delete from tbl_comments
    	where type_id=#{typeId}
    </delete>
    
    <delete id="removeCommentByUserNo" parameterType="string">
    	delete from tbl_comments
    	where user_no=#{userNo}
    </delete>
    
    <!--改 -->
    <update id="updateComment" parameterType="com.ray.entity.Comment" >
        update tbl_comments
        <set>
            <if test="content!=null">content=#{content},</if>
            <if test="commentType!=null">type_id=#{commentType.typeId},</if>
        </set>
        where comment_id = #{commentId}
    </update>
    
    <!-- 根据id查询评论 -->
    <select id="loadCommentById" parameterType="int" resultType="com.ray.entity.Comment" resultMap="commentRM">
        select 
        p.comment_id,p.content,p.create_time,p.course_no,b.type_id,b.type_name,c.user_no,c.user_name,c.user_pic
        from tbl_comments p
        left join tbl_comment_type b
        on p.type_id=b.type_id
        left join tbl_users c
        on p.user_no=c.user_no
        where p.comment_id= #{commentId}
    </select>
    
    <!-- 根据courseId查询 -->
    <select id="loadCommentByCourseNo" parameterType="string" resultMap="commentRM">
        select * from tbl_comments
        where course_no= #{courseNo}
    </select>
    
    <select id="loadCommentByUserNo" parameterType="string" resultType="int">
    	select comment_id
    	from tbl_comments
    	where user_no=#{userNo}
    </select>
    
    <!-- 根据类型查询评论 -->
    <select id="loadCommentByTypeId" parameterType="int" resultType="int">
        select comment_id from tbl_comments
        where type_id= #{typeId}
    </select>
    
    <!-- 查询所有评论 -->
    <select id="loadAllComment" resultMap="commentRM">
    	select 
        p.comment_id,p.content,p.create_time,p.course_no,b.type_id,b.type_name,c.user_no,c.user_name,c.user_pic
        from tbl_comments p
        left join tbl_comment_type b
        on p.type_id=b.type_id
        left join tbl_users c
        on p.user_no=c.user_no
        order by p.comment_id asc
    </select>
    
    <!-- 查询各课程拥某个种类评论的数目 -->
    <select id="loadCountByType" resultMap="type_cnt" parameterType="int">
    	SELECT course_no,COUNT(type_id) AS count
		FROM tbl_comments
		GROUP BY course_no,type_id
		HAVING type_id=#{typeId};
    </select>
    
    <select id="loadCount" resultMap="lc">
		select a.course_no,good,bad
		from(
				SELECT DISTINCT MainTable.course_no,ifNULL(SubTable.good, 0) AS good
				FROM tbl_comments AS MainTable LEFT JOIN  
				(SELECT course_no,COUNT(1) AS good FROM tbl_comments WHERE type_id = 1 GROUP BY course_no) AS SubTable  
				ON MainTable.course_no = SubTable.course_no
		)a LEFT JOIN (
				SELECT DISTINCT MainTable.course_no,ifNULL(SubTable.bad, 0) AS bad
				FROM tbl_comments AS MainTable LEFT JOIN  
				(SELECT course_no,COUNT(1) AS bad FROM tbl_comments WHERE type_id = 2 GROUP BY course_no) AS SubTable  
				ON MainTable.course_no = SubTable.course_no
		)b on a.course_no=b.course_no
    </select>
</mapper>